{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/Home/Home.js","components/Login/Login.js","components/Signup/Signup.js","components/Results/Results.js","components/Specific-Drink/SearchForDrink.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","Button","id","basic","color","Component","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","target","value","handleSelect","formatted_address","state","bind","assertThisInitialized","_this2","_this$state","es","params","key","libraries","render","googleMaps","react_google_places_suggest_es","autocompletionRequest","input","onSelectSuggest","Input","placeholder","onChange","pathname","place","Home","components_Header_Header","components_Search_Search","Login","Form","Group","controlId","FormControl","type","Signup","Results","geo","results","apiKey","geolocUrl","searchUrl","componentDidMount","props","location","locUrl","concat","replace","axios","get","then","response","data","geometry","resUrl","lat","lng","console","log","config","headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","Content-Type","catch","error","map","boba","idx","name","SearchForDrink","drinkOptions","item","text","Dropdown","fluid","multiple","search","selection","options","App","basename","react_router","exact","path","component","Boolean","window","hostname","match","firebase","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b962a331.chunk.js","sourcesContent":["import './Header.scss';\r\nimport React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"Header\">\r\n        <Link to=\"/\" className=\"title-box\">\r\n          <div className=\"title\"> Boba Buddy </div>\r\n        </Link>\r\n        <div className=\"buttons\">\r\n          <Link to=\"/Login\">\r\n            <Button id=\"login-button\" basic color='black'> Log In </Button>\r\n          </Link>\r\n          <Link to=\"/Signup\">\r\n            <Button id=\"signup-button\" basic color='black'> Sign Up </Button>\r\n          </Link>\r\n        </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Header;\r\n","import './Search.scss';\r\nimport React, { Component } from 'react';\r\nimport {Input, Button } from 'semantic-ui-react'\r\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\r\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst API_KEY = \"AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY\";\r\n\r\nclass Search extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      value: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      query: event.target.value,\r\n      value: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSelect = (event) => {\r\n    this.setState({\r\n      query: '',\r\n      value: event.formatted_address\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {query, value} = this.state\r\n    return (\r\n      <div className=\"search\">\r\n        <p className=\"intro\">\r\n          Looking for a boba place?\r\n          <br></br>\r\n          Have no idea what to get at a boba shop?\r\n          <br></br>\r\n          Want to leave a review for specific boba at a place?\r\n          <br></br>\r\n          Search for a place to find boba places nearby. Login to leave reviews.\r\n        </p>\r\n        <ReactGoogleMapLoader\r\n        params={{key: API_KEY,\r\n        libraries: \"places,geocode\"}}\r\n        render={googleMaps => googleMaps && (\r\n          <div className=\"search-bar\">\r\n            <ReactGooglePlacesSuggest\r\n            autocompletionRequest={{input: query}}\r\n            googleMaps={googleMaps}\r\n            onSelectSuggest={this.handleSelect}>\r\n            <Input className=\"search-form\"\r\n            placeholder=\"Search for location (address, zip code..)\"\r\n            onChange={this.handleChange}\r\n            value={value}/>\r\n            </ReactGooglePlacesSuggest>\r\n            <Link to={{\r\n              pathname: \"/SearchForDrink\",\r\n              state: {\r\n                place: value\r\n              }}} >\r\n              <Button className=\"search-button\">Search</Button>\r\n            </Link>\r\n          </div>\r\n        )}>\r\n        </ReactGoogleMapLoader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  googleMaps: propTypes.object,\r\n}\r\n\r\nexport default Search;\r\n","import './Home.scss';\r\nimport React, { Component } from 'react';\r\nimport Header from '../Header/Header.js';\r\nimport Search from '../Search/Search.js'\r\n\r\nclass Home extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"Home\">\r\n          <Header />\r\n          <Search />\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Home;\r\n","import './Login.scss';\r\nimport React, { Component } from 'react';\r\nimport {Form, FormControl} from 'react-bootstrap';\r\nimport Header from '../Header/Header.js';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"login\">\r\n        <Header />\r\n        <div className=\"login-field\">\r\n         <Form>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n           <FormControl type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n          </Form>\r\n          <Button id=\"login-button\"> Log In </Button>\r\n          <Link to=\"/Signup\">\r\n            <Button basic color=\"black\" id=\"signup-button\"> Don't have an account? Sign up! </Button>\r\n          </Link>\r\n          </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Login;\r\n","import './Signup.scss';\r\nimport React, { Component } from 'react';\r\nimport {Form, FormControl} from 'react-bootstrap';\r\nimport Header from '../Header/Header.js';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\n\r\nclass Signup extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"signup\">\r\n        <Header />\r\n        <div className=\"signup-field\">\r\n         <Form className=\"signup-input\">\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n           <FormControl type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" className=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" className=\"confirmPassword\" placeholder=\"Confirm Password\" />\r\n          </Form.Group>\r\n          </Form>\r\n          <Button id=\"signup-button\"> Sign Up! </Button>\r\n          </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Signup;\r\n","import './Results.scss';\r\nimport React, { Component } from 'react';\r\nimport Header from '../Header/Header.js';\r\nimport axios from 'axios';\r\n\r\nclass Results extends Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      geo: {},\r\n      results: []\r\n    }\r\n\r\n    this.apiKey = '&key=AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY';\r\n\r\n    this.geolocUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\r\n    this.searchUrl = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\r\n  \r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {place} = this.props.location.state;\r\n\r\n    let locUrl = `${this.geolocUrl}${place.replace(/\\s/g,'+')}${this.apiKey}`;\r\n\r\n    axios.get(locUrl).then((response) => {\r\n      this.setState({\r\n        geo: response.data.results[0].geometry.location\r\n      })\r\n\r\n      let resUrl = `${this.searchUrl}${this.state.geo.lat},${this.state.geo.lng}&rankby=distance&keyword=boba${this.apiKey}`;\r\n      console.log(resUrl);\r\n      axios.get(resUrl, {\r\n        config: {\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'GET',\r\n            'Access-Control-Allow-Headers': 'Content-Type',\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }\r\n      }).then((response) => {\r\n        this.setState({\r\n          results: response.data.results\r\n        })\r\n        console.log(this.state.results);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n   \r\n  }\r\n\r\n   render() {\r\n     return (\r\n       <div className=\"results\">\r\n        <Header />\r\n        <div className=\"cards\">\r\n          {this.state.results.map((boba, idx) =>\r\n            <div className=\"bobaPlace\">\r\n              <p>{boba.name}</p>\r\n              <p>Location: {boba.formatted_address}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-bootstrap-autosuggest';\r\nimport Header from '../Header/Header.js';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport './SearchForDrink.scss';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SearchForDrink extends Component {\r\n  //once we get drinks database\r\n  /*\r\n    const stateOptions = _.map(addressDefinitions.state, (state, index) => ({\r\n    key: addressDefinitions.state_abbr[index],\r\n    text: state,\r\n    value: addressDefinitions.state_abbr[index],\r\n  }))\r\n  */\r\n\r\n  render() {\r\n    const bobaDrinks = [{name: \"Oolong Milk Tea\"}, {name: \"Oolong Peach Tea\"}, {name: \"Oolong Tea\"}, {name: \"Green Tea\"}]\r\n    const drinkOptions = bobaDrinks.map(item => ({\r\n    key: item.name,\r\n    text: item.name,\r\n    value: item.name\r\n  }))\r\n    return (\r\n\r\n      <div className=\"SearchForDrink\">\r\n        <Header />\r\n        <div className = \"SearchSection\">\r\n         <p id = \"instruction\"> Search for one or more boba drinks. </p>\r\n         <p></p>\r\n         <Dropdown id = \"search-bar\"\r\n         placeholder = \"Boba drink\"\r\n         fluid\r\n         multiple\r\n         search\r\n         selection\r\n         options = {drinkOptions} />\r\n         <Link to={{\r\n              pathname: \"/Results\",\r\n              state: {\r\n                place: this.props.location.state.place\r\n              }}}>\r\n           <Button className=\"search-button\">Search</Button>\r\n         </Link>\r\n         <Link to={{\r\n              pathname: \"/Results\",\r\n              state: {\r\n                place: this.props.location.state.place \r\n              }}}>\r\n          <Button id = \"skip-button\"> SKIP and show me all the boba places </Button>\r\n         </Link>\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForDrink;\r\n","import React, { Component } from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Home from '../Home/Home.js';\r\nimport Login from '../Login/Login.js';\r\nimport Signup from '../Signup/Signup.js';\r\nimport Results from '../Results/Results.js';\r\nimport SearchForDrink from '../Specific-Drink/SearchForDrink.js'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route exact path=\"/Login\" component={Login}/>\r\n          <Route exact path=\"/Signup\" component={Signup}/>\r\n          <Route exact path=\"/Results\" component={Results}/>\r\n          <Route exact path=\"/SearchForDrink\" component={SearchForDrink}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBeSlCn1ILfNQBg975d47IqsmavBAJRaKc\",\r\n    authDomain: \"webdev-final-project-mk-i.firebaseapp.com\",\r\n    databaseURL: \"https://webdev-final-project-mk-i.firebaseio.com\",\r\n    projectId: \"webdev-final-project-mk-i\",\r\n    storageBucket: \"webdev-final-project-mk-i.appspot.com\",\r\n    messagingSenderId: \"257965645347\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}