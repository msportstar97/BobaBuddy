{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/Home/Home.js","components/Login/Login.js","components/Signup/Signup.js","components/Results/Results.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","Button","id","basic","color","Component","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","target","value","handleSelect","formatted_address","state","bind","assertThisInitialized","_this2","_this$state","es","params","key","libraries","render","googleMaps","react_google_places_suggest_es","autocompletionRequest","input","onSelectSuggest","Input","placeholder","onChange","pathname","place","Home","components_Header_Header","components_Search_Search","Login","Form","Group","controlId","FormControl","type","Signup","Results","geo","results","apiKey","geolocUrl","searchUrl","componentDidMount","props","location","locUrl","concat","replace","axios","get","then","response","data","geometry","resUrl","lat","lng","console","log","crossdomain","catch","error","map","boba","idx","name","App","basename","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d42a8abe.chunk.js","sourcesContent":["import './Header.scss';\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nclass Header extends Component {\n   render() {\n     return (\n       <div className=\"Header\">\n        <Link to=\"/\" className=\"title-box\">\n          <div className=\"title\"> Boba Buddy </div>\n        </Link>\n        <div className=\"buttons\">\n          <Link to=\"/Login\">\n            <Button id=\"login-button\" basic color='black'> Log In </Button>\n          </Link>\n          <Link to=\"/Signup\">\n            <Button id=\"signup-button\" basic color='black'> Sign Up </Button>\n          </Link>\n        </div>\n       </div>\n     );\n   }\n}\n\nexport default Header;\n","import './Search.scss';\nimport React, { Component } from 'react';\nimport {Input, Button } from 'semantic-ui-react'\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\nimport propTypes from \"prop-types\";\nimport { Link } from 'react-router-dom'\n\nconst API_KEY = \"AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY\";\n\nclass Search extends Component {\n\n  constructor() {\n    super();\n    \n    this.state = {\n      query: '',\n      value: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n      value: event.target.value\n    });\n  } \n\n  handleSelect = (event) => {\n    this.setState({\n      query: '',\n      value: event.formatted_address\n    })\n  }\n  \n  render() {\n    const {query, value} = this.state\n    return (\n      <div className=\"search\">\n        <p className=\"intro\">\n          Looking for a boba place?\n          <br></br>\n          Have no idea what to get at a boba shop?\n          <br></br>\n          Want to leave a review for specific boba at a place?\n          <br></br>\n          Search for a place to find boba places nearby. Login to leave reviews.\n        </p>\n        <ReactGoogleMapLoader\n        params={{key: API_KEY,\n        libraries: \"places,geocode\"}}\n        render={googleMaps => googleMaps && (\n          <div className=\"search-bar\">\n            <ReactGooglePlacesSuggest\n            autocompletionRequest={{input: query}}\n            googleMaps={googleMaps}\n            onSelectSuggest={this.handleSelect}>\n            <Input className=\"search-form\" \n            placeholder=\"Search for location (address, zip code..)\"\n            onChange={this.handleChange} \n            value={value}/>\n            </ReactGooglePlacesSuggest>\n            <Link to={{\n              pathname: \"/Results\",\n              state: {\n                place: value\n              }}} >\n              <Button className=\"search-button\">Search</Button>\n            </Link>\n          </div>\n        )}>\n        </ReactGoogleMapLoader>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  googleMaps: propTypes.object,\n}\n\nexport default Search;\n","import './Home.scss';\nimport React, { Component } from 'react';\nimport Header from '../Header/Header.js';\nimport Search from '../Search/Search.js'\n\nclass Home extends Component {\n   render() {\n     return (\n       <div className=\"Home\">\n          <Header />\n          <Search />\n       </div>\n     );\n   }\n}\n\nexport default Home;\n","import './Login.scss';\nimport React, { Component } from 'react';\nimport {Form, FormControl} from 'react-bootstrap';\nimport Header from '../Header/Header.js';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nclass Login extends Component {\n   render() {\n     return (\n       <div className=\"login\">\n        <Header />\n        <div className=\"login-field\">\n         <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n           <FormControl type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n           <FormControl type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          </Form>\n          <Button id=\"login-button\"> Log In </Button>\n          <Link to=\"/Signup\">\n            <Button basic color=\"black\" id=\"signup-button\"> Don't have an account? Sign up! </Button>\n          </Link>\n          </div>\n       </div>\n     );\n   }\n}\n\nexport default Login;\n","import './Signup.scss';\nimport React, { Component } from 'react';\nimport {Form, FormControl} from 'react-bootstrap';\nimport Header from '../Header/Header.js';\nimport { Button } from 'semantic-ui-react'\n\n\nclass Signup extends Component {\n   render() {\n     return (\n       <div className=\"signup\">\n        <Header />\n        <div className=\"signup-field\">\n         <Form className=\"signup-input\">\n          <Form.Group controlId=\"formGroupEmail\">\n           <FormControl type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n           <FormControl type=\"password\" className=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n           <FormControl type=\"password\" className=\"confirmPassword\" placeholder=\"Confirm Password\" />\n          </Form.Group>\n          </Form>\n          <Button id=\"signup-button\"> Sign Up! </Button>\n          </div>\n       </div>\n     );\n   }\n}\n\nexport default Signup;","import './Results.scss';\nimport React, { Component } from 'react';\nimport Header from '../Header/Header.js';\nimport axios from 'axios';\n\nclass Results extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      geo: {},\n      results: []\n    }\n\n    this.apiKey = '&key=AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY';\n\n    this.geolocUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\n    this.searchUrl = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\n  \n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    const {place} = this.props.location.state;\n    let locUrl = `${this.geolocUrl}${place.replace(/\\s/g,'+')}${this.apiKey}`;\n\n    axios.get(locUrl).then((response) => {\n      this.setState({\n        geo: response.data.results[0].geometry.location\n      })\n\n      let resUrl = `${this.searchUrl}${this.state.geo.lat},${this.state.geo.lng}&rankby=distance&keyword=boba${this.apiKey}`;\n      console.log(resUrl);\n      axios.get(resUrl, { crossdomain: true }).then((response) => {\n        this.setState({\n          results: response.data.results\n        })\n        console.log(this.state.results);\n      }).catch((error) => {\n        console.log(error);\n      });\n\n    }).catch((error) => {\n      console.log(error);\n    });\n   \n  }\n\n   render() {\n     return (\n       <div className=\"results\">\n        <Header />\n        <div className=\"cards\">\n          {this.state.results.map((boba, idx) =>\n            <div className=\"bobaPlace\">\n              <p>{boba.name}</p>\n              <p>Location: {boba.formatted_address}</p>\n            </div>\n          )}\n        </div>\n       </div>\n     );\n   }\n}\n\nexport default Results;\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Home from '../Home/Home.js';\nimport Login from '../Login/Login.js';\nimport Signup from '../Signup/Signup.js';\nimport Results from '../Results/Results.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/Login\" component={Login}/>\n          <Route exact path=\"/Signup\" component={Signup}/>\n          <Route exact path=\"/Results\" component={Results}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}