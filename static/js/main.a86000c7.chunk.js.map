{"version":3,"sources":["components/Search/Search.js","components/Home/Home.js","components/Login/Login.js","components/Signup/Signup.js","components/Results/Results.js","components/Specific-Drink/SearchForDrink.js","components/Header/Header.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","target","value","handleSelect","formatted_address","state","bind","assertThisInitialized","_this2","_this$state","react_default","a","createElement","className","es","params","key","libraries","render","googleMaps","react_google_places_suggest_es","autocompletionRequest","input","onSelectSuggest","Input","placeholder","onChange","react_router_dom","to","pathname","place","Button","Component","Home","components_Search_Search","Login","Form","Group","controlId","FormControl","type","id","basic","color","Signup","props","dummy","email","password","confirmPassword","signup","handleChangeEmail","handleChangePassword","handleChangeConfirmPassword","console","log","ref","firebase","child","set","e","onClick","Results","handleFilter","showDrinkDropdown","geo","results","filterOption","drinkFilterOption","apiKey","geolocUrl","searchUrl","componentDidMount","location","locUrl","concat","replace","axios","get","then","response","data","geometry","placesRequest","window","google","maps","LatLng","lat","lng","keyword","rankBy","places","RankBy","DISTANCE","map","Map","document","PlacesService","search","catch","error","_this3","filterOptions","text","DrinkDropdown","require","createReactClass","displayName","Dropdown","fluid","selection","options","_ref2","_ref","handleDrinkFilter","boba","idx","name","rating","vicinity","SearchForDrink","drinkOptions","item","multiple","Header","App","basename","components_Header_Header","react_router","exact","path","component","Boolean","hostname","match","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a86000c7.chunk.js","sourcesContent":["import './Search.scss';\r\nimport React, { Component } from 'react';\r\nimport {Input, Button } from 'semantic-ui-react'\r\nimport ReactGoogleMapLoader from \"react-google-maps-loader\"\r\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\r\nimport propTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst API_KEY = \"AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY\";\r\n\r\nclass Search extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      value: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      query: event.target.value,\r\n      value: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSelect = (event) => {\r\n    this.setState({\r\n      query: '',\r\n      value: event.formatted_address\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {query, value} = this.state\r\n    return (\r\n      <div className=\"search\">\r\n        <p className=\"intro\">\r\n          Looking for a boba place?\r\n          <br></br>\r\n          Have no idea what to get at a boba shop?\r\n          <br></br>\r\n          Want to leave a review for specific boba at a place?\r\n          <br></br>\r\n          Search for a place to find boba places nearby. Login to leave reviews.\r\n        </p>\r\n        <ReactGoogleMapLoader\r\n        params={{key: API_KEY,\r\n        libraries: \"places,geocode\"}}\r\n        render={googleMaps => googleMaps && (\r\n          <div className=\"search-bar\">\r\n            <ReactGooglePlacesSuggest\r\n            autocompletionRequest={{input: query}}\r\n            googleMaps={googleMaps}\r\n            onSelectSuggest={this.handleSelect}>\r\n            <Input className=\"search-form\"\r\n            placeholder=\"Search for location (address, zip code..)\"\r\n            onChange={this.handleChange}\r\n            value={value}/>\r\n            </ReactGooglePlacesSuggest>\r\n            <Link to={{\r\n              pathname: \"/SearchForDrink\",\r\n              state: {\r\n                place: value\r\n              }}} >\r\n              <Button className=\"search-button\">Search</Button>\r\n            </Link>\r\n          </div>\r\n        )}>\r\n        </ReactGoogleMapLoader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  googleMaps: propTypes.object,\r\n}\r\n\r\nexport default Search;\r\n","import './Home.scss';\r\nimport React, { Component } from 'react';\r\nimport Search from '../Search/Search.js'\r\n\r\nclass Home extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"Home\">\r\n          <Search />\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Home;\r\n","import './Login.scss';\r\nimport React, { Component } from 'react';\r\nimport {Form, FormControl} from 'react-bootstrap';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"login\">\r\n        <div className=\"login-field\">\r\n         <Form>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n           <FormControl type=\"email\" placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n          </Form>\r\n          <Button id=\"login-button\"> Log In </Button>\r\n          <Link to=\"/Signup\">\r\n            <Button basic color=\"black\" id=\"signup-button\"> Don't have an account? Sign up! </Button>\r\n          </Link>\r\n          </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Login;\r\n","import './Signup.scss';\r\nimport React, { Component } from 'react';\r\nimport {Form, FormControl} from 'react-bootstrap';\r\nimport { Button } from 'semantic-ui-react'\r\nimport * as firebase from 'firebase';\r\n\r\n// misterred250@gmail.com\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        dummy: 'hello world',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }\r\n\r\n\r\n      this.signup = this.signup.bind(this);\r\n      this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n      this.handleChangePassword = this.handleChangePassword.bind(this);\r\n      this.handleChangeConfirmPassword = this.handleChangeConfirmPassword.bind(this);\r\n      \r\n  }\r\n\r\n\r\n\r\n  // componentDidMount() {\r\n  //   const rootRef = firebase.database().ref();\r\n  //   const usersRef = rootRef.child('users');\r\n  // //   usersRef.push ({\r\n  // //     name: \"John\",\r\n  // //     number: 1,\r\n  // //     age: 30\r\n  // //  });\r\n  // usersRef.on('value', snap=> {\r\n  //     this.setState({\r\n  //       dummy: snap.val()\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  signup() {\r\n    console.log('let\\'s do some firebase');\r\n    var ref = firebase.database().ref('users');\r\n    \r\n    var email = this.state.email;\r\n    var confirmPassword = this.state.confirmPassword;\r\n\r\n    if (email !== '' && this.state.password !== '' && confirmPassword !== '' \r\n      && this.state.password === confirmPassword) {\r\n      // ref.push({\r\n      //   name: email,\r\n      //   password: password\r\n      // });\r\n      ref.child(email).set ({\r\n        password: this.state.password,\r\n     });\r\n      \r\n    } else {\r\n      console.log('invalid email/password');\r\n    }\r\n\r\n  }\r\n\r\n  handleChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeConfirmPassword(e) {\r\n    this.setState({\r\n      confirmPassword: e.target.value\r\n    });\r\n  }\r\n\r\n   render() {\r\n    //  console.log('dummy', this.state.dummy);\r\n     return (\r\n       <div className=\"signup\">\r\n        <div className=\"signup-field\">\r\n         <Form className=\"signup-input\">\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n           <FormControl type=\"email\" className=\"email\" onChange={this.handleChangeEmail} placeholder=\"Email\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" className=\"password\" onChange={this.handleChangePassword} placeholder=\"Password\" />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n           <FormControl type=\"password\" className=\"confirmPassword\" onChange={this.handleChangeConfirmPassword} placeholder=\"Confirm Password\" />\r\n          </Form.Group>\r\n          </Form>\r\n          <Button id=\"signup-button\" onClick={() => this.signup()}> Sign Up! </Button>\r\n          </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Signup;\r\n","import './Results.scss';\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nclass Results extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      geo: {},\r\n      results: [],\r\n      filterOption: \"distance\",\r\n      showDrinkDropdown: false,\r\n      drinkFilterOption: \"\"\r\n    }\r\n\r\n    this.apiKey = '&key=AIzaSyDFtzabY5k6-NOC6V1h3b-LjftEvZyW2MY';\r\n\r\n    this.geolocUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\r\n    this.searchUrl = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\r\n\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {place} = this.props.location.state;\r\n\r\n    let locUrl = `${this.geolocUrl}${place.replace(/\\s/g,'+')}${this.apiKey}`;\r\n\r\n    axios.get(locUrl).then((response) => {\r\n      this.setState({\r\n        geo: response.data.results[0].geometry.location\r\n      })\r\n\r\n      var placesRequest = {\r\n        location: new window.google.maps.LatLng(this.state.geo.lat, this.state.geo.lng),\r\n        keyword: '(bubble tea) OR (boba)',\r\n        rankBy: window.google.maps.places.RankBy.DISTANCE,\r\n      };\r\n\r\n      let map = new window.google.maps.Map(document.createElement('div'));\r\n      let service = new window.google.maps.places.PlacesService(map);\r\n\r\n      service.search(placesRequest, ((response) => {\r\n        this.setState({\r\n          results: response\r\n        })\r\n        console.log(this.state.results);\r\n      }))\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  handleFilter = (e) => {\r\n\r\n    if (e.target.value === \"drink-rating\") {\r\n      this.setState({showDrinkDropdown: true});\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n   render() {\r\n\r\n     const filterOptions = [\r\n       {\r\n         key: \"peach oolong tea\",\r\n         value: \"peach oolong tea\",\r\n         text: \"Peach Oolong Tea\"\r\n       },\r\n       {\r\n         key: \"oolong tea\",\r\n         value: \"oolong tea\",\r\n         text: \"Oolong Tea\"\r\n       },\r\n       {\r\n         key: \"oolong milk tea\",\r\n         value: \"oolong milk tea\",\r\n         text: \"Oolong Milk Tea\"\r\n       }\r\n     ]\r\n\r\n     function handleDrinkFilter(e, {value}) {\r\n       //this.setState({drinkFilterOption: {value}})\r\n       console.log({value})\r\n     }\r\n\r\n\r\n\r\n      var createReactClass = require('create-react-class');\r\n\r\n\r\n      var DrinkDropdown = createReactClass({\r\n        render: function() {\r\n        return (\r\n          <div id=\"results\" className=\"search-results\">\r\n            <Dropdown\r\n              placeholder='Select Drink'\r\n              fluid\r\n              search\r\n              selection\r\n              options={filterOptions}\r\n              onChange={(e, { value }) => handleDrinkFilter(e, { value })}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n     return (\r\n       <div className=\"results\">\r\n        <div className = \"filterDropdown\">\r\n          <span> Sort By </span>\r\n            <select className = \"order-select\" onChange={(e) => this.handleFilter(e)}>\r\n              <option value=\"distance\">Distance</option>\r\n              <option value=\"rating\">Rating</option>\r\n              <option value=\"drink-rating\">Drink Rating</option>\r\n            </select>\r\n            { this.state.showDrinkDropdown ? <DrinkDropdown /> : null }\r\n        </div>\r\n\r\n        <div className=\"cards\">\r\n          {this.state.results.map((boba, idx) =>\r\n            <div className=\"bobaPlace\" key={idx}>\r\n              <p>{boba.name}</p>\r\n              <p id = \"place_rating\"> {boba.rating} / 5.0 </p>\r\n              <p>{boba.vicinity}</p>\r\n\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-bootstrap-autosuggest';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport './SearchForDrink.scss';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass SearchForDrink extends Component {\r\n  //once we get drinks database\r\n  /*\r\n    const stateOptions = _.map(addressDefinitions.state, (state, index) => ({\r\n    key: addressDefinitions.state_abbr[index],\r\n    text: state,\r\n    value: addressDefinitions.state_abbr[index],\r\n  }))\r\n  */\r\n\r\n  render() {\r\n    const bobaDrinks = [{name: \"Oolong Milk Tea\"}, {name: \"Oolong Peach Tea\"}, {name: \"Oolong Tea\"}, {name: \"Green Tea\"}]\r\n    const drinkOptions = bobaDrinks.map(item => ({\r\n    key: item.name,\r\n    text: item.name,\r\n    value: item.name\r\n  }))\r\n    return (\r\n\r\n      <div className=\"SearchForDrink\">\r\n        <div className = \"SearchSection\">\r\n         <p id = \"instruction\"> Search for one or more boba drinks. </p>\r\n         <p></p>\r\n         <Dropdown id = \"search-bar\"\r\n         placeholder = \"Boba drink\"\r\n         fluid\r\n         multiple\r\n         search\r\n         selection\r\n         options = {drinkOptions} />\r\n         <Link to={{\r\n              pathname: \"/Results\",\r\n              state: {\r\n                place: this.props.location.state.place\r\n              }}}>\r\n           <Button className=\"search-button\">Search</Button>\r\n         </Link>\r\n         <Link to={{\r\n              pathname: \"/Results\",\r\n              state: {\r\n                place: this.props.location.state.place \r\n              }}}>\r\n          <Button id = \"skip-button\"> SKIP and show me all the boba places </Button>\r\n         </Link>\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForDrink;\r\n\r\n","import './Header.scss';\r\nimport React, { Component } from 'react';\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n   render() {\r\n     return (\r\n       <div className=\"Header\">\r\n        <Link to=\"/\" className=\"title-box\">\r\n          <div className=\"title\"> Boba Buddy </div>\r\n        </Link>\r\n        <div className=\"buttons\">\r\n          <Link to=\"/Login\">\r\n            <Button id=\"login-button\" basic color='black'> Log In </Button>\r\n          </Link>\r\n          <Link to=\"/Signup\">\r\n            <Button id=\"signup-button\" basic color='black'> Sign Up </Button>\r\n          </Link>\r\n        </div>\r\n       </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Home from '../Home/Home.js';\r\nimport Login from '../Login/Login.js';\r\nimport Signup from '../Signup/Signup.js';\r\nimport Results from '../Results/Results.js';\r\nimport SearchForDrink from '../Specific-Drink/SearchForDrink.js';\r\nimport Header from '../Header/Header.js';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename=\"/\">\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route exact path=\"/Login\" component={Login}/>\r\n          <Route exact path=\"/Signup\" component={Signup}/>\r\n          <Route exact path=\"/Results\" component={Results}/>\r\n          <Route exact path=\"/SearchForDrink\" component={SearchForDrink}/>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport * as firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBeSlCn1ILfNQBg975d47IqsmavBAJRaKc\",\r\n    authDomain: \"webdev-final-project-mk-i.firebaseapp.com\",\r\n    databaseURL: \"https://webdev-final-project-mk-i.firebaseio.com\",\r\n    projectId: \"webdev-final-project-mk-i\",\r\n    storageBucket: \"webdev-final-project-mk-i.appspot.com\",\r\n    messagingSenderId: \"257965645347\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}